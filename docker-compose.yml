services:
  backend-dev:
    build:
      context: .
      dockerfile: backend/Dockerfile.${ENV}
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    environment:
      - NODE_ENV=${ENV}
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=supermarket_db
    depends_on:
      - database
    deploy:
      replicas: ${ENABLE_DEV:-0}

  backend-prod:
    build:
      context: .
      dockerfile: backend/Dockerfile.${ENV}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${ENV}
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=supermarket_db
    depends_on:
      - database
    deploy:
      replicas: ${ENABLE_PROD:-0}

  front-dev:
    build:
      context: .
      dockerfile: web-app/Dockerfile.${ENV}
    ports:
      - "5173:5173"
    depends_on:
      - backend-dev
    deploy:
      replicas: ${ENABLE_DEV:-0}

  front-prod:
    build:
      context: .
      dockerfile: web-app/Dockerfile.${ENV}
    ports:
      - "5173:80"
    depends_on:
      - backend-prod
    deploy:
      replicas: ${ENABLE_PROD:-0}

  database:
    image: mysql:8.0
    container_name: database_supermarket
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: supermarket_db
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data: